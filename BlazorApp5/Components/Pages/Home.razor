@page "/"

<h3>Ansökan om att studera</h3>

@if (showSuccessMessage)
{
    <div class="alert alert-success" role="alert">
        Ansökan har skickats in
    </div>
}

<EditForm Model="@studentApplication" OnInvalidSubmit="SubmitForm">
    
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group">
        <label for="name">Namn:</label>
        <InputText id="name" class="form-control" @bind-Value="studentApplication.Name" />
        <ValidationMessage For="@(() => studentApplication.Name)"/>

    </div>
    <div class="form-group">
        <label for="DateOfBirth">Födelsedatum:</labe>
            <InputDate id="dateOfBirth" class="form-control" @bind-Value="studentApplication.DateOfBirth" />
            <ValidationMessage For="@(() => studentApplication.DateOfBirth)" />
    </div>
    <div class="form-group">
        <label for="email">E-post</labels>
            <InputText id="email" class="form-control" @bind-Value="studentApplication.Email"/>
            <ValidationMessage For="@(() => studentApplication.Email)" />
    </div>

    <button type="submit" class="btn btn-primary">Skicka</button>
</EditForm>



@code {
    private StudentApplication studentApplication = new StudentApplication();
    private bool showSuccessMessage = false;

    private async Task SubmitForm()
    {
        if (studentApplication.Age < 10)
        {
            return;
        }

        if (!IsValidEmail(studentApplication.Email))
        {
            return;
        }

        await StudentApplicationService.AddStudentApplication(studentApplication);
        showSuccessMessage = true;
    }


    private bool ISValidEmail( string email)
    {
        try
        {
            var mailAdress = new System.Net.Mail.MailAdress(email);
            return mailAdress.Adress == email;
        }
        catch
        {
            return false;
        }
    }


}